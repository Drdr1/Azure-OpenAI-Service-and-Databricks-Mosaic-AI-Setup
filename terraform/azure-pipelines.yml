trigger:
  branches:
    include:
      - main
  paths:
    include:
      - terraform/*

stages:
  - stage: Terraform_Deploy
    displayName: 'Deploy Terraform Infrastructure'
    jobs:
      - job: Terraform_Apply
        displayName: 'Run Terraform Workflow'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          # Step 1: Install Terraform manually
          - task: AzureCLI@2
            inputs:
              azureSubscription: '<your-service-connection-name>'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Install unzip dependency
                sudo apt-get update && sudo apt-get install -y unzip
                # Download Terraform 1.5.7 (adjust version as needed)
                curl -fsSL https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip -o terraform.zip
                unzip terraform.zip
                sudo mv terraform /usr/local/bin/
                # Verify installation
                terraform --version
            displayName: 'Install Terraform'

          # Step 2: Initialize Terraform with Azure backend
          - task: AzureCLI@2
            inputs:
              azureSubscription: '<your-service-connection-name>'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Log in to Azure using service principal
                az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
                # Set the subscription
                az account set --subscription "955faad9-ebe9-4a85-9974-acae429ae877"
                # Initialize Terraform with backend configuration
                terraform init \
                  -backend-config="resource_group_name=dev-openai-rg" \
                  -backend-config="storage_account_name=devtfstatezved9d" \
                  -backend-config="container_name=tfstate" \
                  -backend-config="key=terraform.tfstate"
            displayName: 'Terraform Init'

          # Step 3: Generate Terraform plan
          - task: AzureCLI@2
            inputs:
              azureSubscription: '<your-service-connection-name>'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Create a Terraform plan
                terraform plan -out=tfplan \
                  -var="client_id=$ARM_CLIENT_ID" \
                  -var="client_secret=$ARM_CLIENT_SECRET" \
                  -var="tenant_id=$ARM_TENANT_ID" \
                  -var="subscription_id=955faad9-ebe9-4a85-9974-acae429ae877"
            displayName: 'Terraform Plan'

          # Step 4: Apply Terraform plan (only on main branch)
          - task: AzureCLI@2
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
            inputs:
              azureSubscription: '<your-service-connection-name>'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Apply the Terraform plan
                terraform apply -auto-approve tfplan
            displayName: 'Terraform Apply'