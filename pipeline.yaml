trigger:
  - main
paths:
    include:
      - terraform/modules/app_gateway/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: openai-platform-variables
  - name: terraformWorkingDirectory
    value: '$(System.DefaultWorkingDirectory)/terraform'

stages:
- 
  displayName: 'Deploy Application Gateway'
  jobs:
  - job: DeployAppGateway
    displayName: 'Deploy Application Gateway'
    steps:
    - task: TerraformInstaller@0
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: 'latest'
    
    - task: AzureCLI@2
      displayName: 'Azure CLI Login with OIDC'
      inputs:
        azureSubscription: 'azure-service-connection-oidc'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Authenticating with OIDC token"
          az account show
    
    - task: TerraformTaskV4@4
      displayName: 'Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(terraformWorkingDirectory)'
        backendServiceArm: 'azure-service-connection-oidc'
        backendAzureRmResourceGroupName: '$(resource_group_name)'
        backendAzureRmStorageAccountName: 'tfstate-storage'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'appgw.tfstate'
    
    - task: TerraformTaskV4@4
      displayName: 'Terraform Plan'
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(terraformWorkingDirectory)'
        environmentServiceNameAzureRM: 'azure-service-connection-oidc'
        commandOptions: '-var "subscription_id=$(subscription_id)" -var "environment=$(environment)" -target=module.app_gateway -out=tfplan'
    
    - task: TerraformTaskV4@4
      displayName: 'Terraform Apply'
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(terraformWorkingDirectory)'
        environmentServiceNameAzureRM: 'azure-service-connection-oidc'
        commandOptions: 'tfplan'
    
    - task: AzureCLI@2
      displayName: 'Test Application Gateway'
      inputs:
        azureSubscription: 'azure-service-connection-oidc'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Get Application Gateway public IP
          APPGW_IP=$(terraform -chdir=$(terraformWorkingDirectory) output -raw appgw_public_ip)
          
          # Test the health endpoint
          echo "Testing Application Gateway at http://$APPGW_IP/"
          curl -s -I "http://$APPGW_IP/"
          
          echo "Application Gateway deployment complete"